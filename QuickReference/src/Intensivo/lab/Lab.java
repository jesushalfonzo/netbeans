/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Intensivo.lab;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import reference.beans.Ciudadano;

/**
 *
 * @author curso1
 */
public class Lab extends javax.swing.JFrame {

    private Set<String> sCed = new HashSet<>();
    private List<Ciudadano> sCiud = new ArrayList<>();
    private int codToFind = -1;

    /**
     * Creates new form Lab
     */
    public Lab() {
        initComponents();
        InnerAction ia = new InnerAction();
        jbSave.addActionListener(ia);
        jbFind.addActionListener(ia);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtCod = new javax.swing.JTextField();
        jtName = new javax.swing.JTextField();
        jtLastName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jbSave = new javax.swing.JButton();
        jbFind = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtCod.setText("jTextField1");

        jtName.setText("jTextField2");
        jtName.setEnabled(false);

        jtLastName.setText("jTextField3");
        jtLastName.setEnabled(false);

        jLabel1.setText("Cod");

        jLabel2.setText("nombre");

        jLabel3.setText("Apellido");

        jbSave.setText("Guardar");
        jbSave.setEnabled(false);

        jbFind.setText("Buscar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbFind))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtCod, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jtLastName, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                            .addComponent(jtName))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSave)
                    .addComponent(jbFind)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Lab().setVisible(true);
            }
        });
    }

    private class InnerAction implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent ae) {
            Ciudadano ciudadano = new Ciudadano();

            /*
             * Preguntar que boton fue presionado.
             */
            enabled();
            if (jbSave == ae.getSource()) {
                ScreenToObject(ciudadano);
                /*
                 * Si codToFid es mayor que -1 es que la cedula existe.
                 */
                if (codToFind > -1) {
                    /*
                     * guardar el objeto en la posicion especifica. Esto es
                     * porque es una modificacion.
                     */
                    sCiud.add(codToFind, ciudadano);
                    System.out.println("Mod");
                } else {
                    sCiud.add(ciudadano);
                    System.out.println("Gua");
                }
            } else {
                for (Ciudadano ciudadano1 : sCiud) {
                    /*
                     * preguntar si el objeto obtenido de la coleccion existe con esa cedula.
                     */
                    if (ciudadano1.getId() == Integer.parseInt(jtCod.getText())) {
                        ObjectToScreen(ciudadano1);
                        /*
                         * obtener la posicion del objeto.
                         */
                        codToFind = sCiud.indexOf(ciudadano1);
                        break;
                    }
                }

            }
        }

        /*
         * Los datos de la pantalla los guarda en el objeto correspondiente.
         */
        private void ScreenToObject(Ciudadano ciudadano) {
            ciudadano.setId(Integer.parseInt(jtCod.getText()));
            ciudadano.setName(jtName.getText());
            ciudadano.setLastName(jtLastName.getText());
        }
        /*
         * Los datos del objeto se los paso a la pantalla
         */

        private void ObjectToScreen(Ciudadano ciudadano) {
            jtName.setText(ciudadano.getName());
            jtLastName.setText(ciudadano.getLastName());
        }

        private void enabled() {
            jbSave.setEnabled(!jbSave.isEnabled());
            jbFind.setEnabled(!jbFind.isEnabled());
            jtName.setEnabled(!jtName.isEnabled());
            jtLastName.setEnabled(!jtLastName.isEnabled());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton jbFind;
    private javax.swing.JButton jbSave;
    private javax.swing.JTextField jtCod;
    private javax.swing.JTextField jtLastName;
    private javax.swing.JTextField jtName;
    // End of variables declaration//GEN-END:variables
}
